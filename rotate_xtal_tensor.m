% This function applies a ccw rotation of tensor T from the
% <100> inplane direction about <100> surface normal:
%
% T = linear array of components from upp triangular half of original tensor
% TM = rotated tensor in matrix form
% TL = linear array of components from upp triangular half of rotated tensor

function [TM,TL] = rotate_xtal_tensor(T,rxtal)

rxtal = rxtal*pi/180; % ccw rotation from <100> inplane direction about <100> surface normal

% Correct version from Ting, Anisotropic Elasticity: Theory and
% Applications
% http://solidmechanics.org/text/Chapter3_2/Chapter3_2.htm - wrong sign in
% K_45 and K_54
K = [cos(rxtal)^2 sin(rxtal)^2 0 0 0 2*sin(rxtal)*cos(rxtal); ... 
     sin(rxtal)^2 cos(rxtal)^2 0 0 0 -2*sin(rxtal)*cos(rxtal); ... 
     0 0 1 0 0 0; ... 
     0 0 0 cos(rxtal) -1*sin(rxtal) 0; ... 
     0 0 0 sin(rxtal) cos(rxtal) 0; ... 
     -1*sin(rxtal)*cos(rxtal) sin(rxtal)*cos(rxtal) 0 0 0 (cos(rxtal)^2 - sin(rxtal)^2)];

[nR,nC] = size(T);
if nR == 1 % linear form
    % COMSOL v4+ ordering: 
    % 11, 12,22, 13,23,33, 14,24,34,44, 15,25,35,45,55, 16,26,36,46,56,66
    TM =[T(1), T(2), T(4), T(7), T(11),T(16); ...
         T(2), T(3), T(5), T(8), T(12),T(17); ...
         T(4), T(5), T(6), T(9), T(13),T(18); ...
         T(7), T(8), T(9), T(10),T(14),T(19); ...
         T(11),T(12),T(13),T(14),T(15),T(20); ...
         T(16),T(17),T(18),T(19),T(20),T(21)];
elseif nR == 6 % matrix form, Voigt notation
    TM = T;
else
    error('tensor T has wrong size - input 6x6 matrix or 1x21 array')
end

TM = K*TM*K'; 

TL = [TM(1,1), ...
      TM(1,2), TM(2,2), ...
      TM(1,3), TM(2,3), TM(3,3), ...
      TM(1,4), TM(2,4), TM(3,4), TM(4,4), ...
      TM(1,5), TM(2,5), TM(3,5), TM(4,5), TM(5,5), ...
      TM(1,6), TM(2,6), TM(3,6), TM(4,6), TM(5,6), TM(6,6)];